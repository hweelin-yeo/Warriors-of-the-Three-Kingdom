### Starting build.
# Target: main.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(str), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package str -package ANSITerminal -modules main.ml > main.ml.depends
# Target: ai.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(str), extension:ml, file:ai.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package str -package ANSITerminal -modules ai.ml > ai.ml.depends # cached
# Target: PlayerState.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(str), extension:mli, file:PlayerState.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package str -package ANSITerminal -modules PlayerState.mli > PlayerState.mli.depends # cached
# Target: PlayerState.cmi, tags: { package(ANSITerminal), package(oUnit), package(str), byte, compile, extension:mli, file:PlayerState.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package str -package ANSITerminal -o PlayerState.cmi PlayerState.mli # cached
# Target: State.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(str), extension:mli, file:State.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package str -package ANSITerminal -modules State.mli > State.mli.depends # cached
# Target: State.cmi, tags: { package(ANSITerminal), package(oUnit), package(str), byte, compile, extension:mli, file:State.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package str -package ANSITerminal -o State.cmi State.mli # cached
# Target: ai.cmo, tags: { package(ANSITerminal), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:ai.cmo, file:ai.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package str -package ANSITerminal -o ai.cmo ai.ml # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package str -package ANSITerminal -o main.cmo main.ml
+ ocamlfind ocamlc -c -package oUnit -package str -package ANSITerminal -o main.cmo main.ml
File "main.ml", line 123, characters 60-62:
Error: This expression has type State.cardID = int
       but an expression was expected of type State.card list
Command exited with code 2.
# Compilation unsuccessful.
